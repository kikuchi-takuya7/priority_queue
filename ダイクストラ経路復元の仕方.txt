これから探索しようとしてる所の現時点で分かっている最短でかかるコスト（初期値はとんでもなく大きい値で絶対更新できるように）と今いる場所に来るための最短コスト＋今から探索しようとしている所のコスト（最短コストではなくその場所単体のコスト）を比べて、後者の方が小さいならそこまでの最短経路のコストを更新してrest(そのマスに来る前に居た座標を覚えておく別の二次元配列)に前の座標を更新しておく。これがマップ分全部探索される

経路復元
その後に新しくqueを作って（昇順か降順に勝手に並べ替えてくれる）事前にここにはゴールの位置の配列座標を入れておく（ー１したやつ）
ゴールの位置の座標（配列用にー１した値）からrest配列の要素の中身にあるその位置に行く前にどの座標に居たかの値と、ゴール座標から上下左右の座標（配列的な座標）を比べてそれが同じならqueにその位置の座標を入れて、探索に使っていたゴールの座標を同じだった座標に変える。この時なぜかrestの中のやつ使うと曲がり角でおかしくなったから上下左右探索につかってxyをゴール座標に居れた
繰り返すと結果queには昇順（降順）でゴールに行くまでの座標の位置だけが入ってる状態になり、のちに何かしらの表示をする時に使える。俺はpaizaだったからグラフを表示してるときにque.top()がxyと同じ位置だったら米印、そうでなければ空白って感じにした